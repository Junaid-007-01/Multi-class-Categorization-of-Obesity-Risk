{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kamran\\\\Desktop\\\\Project 8 - Copy\\\\project kamran\\\\my-app\\\\Frontend\\\\src\\\\DietInsufficient.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DietInsufficient = () => {\n  // Example dietary recommendations for 7 days\n  const weeklyDiet = {\n    Monday: {\n      Breakfast: 'Oatmeal with fruits',\n      Lunch: 'Grilled chicken salad',\n      Dinner: 'Baked salmon with vegetables'\n    },\n    Tuesday: {\n      Breakfast: 'Greek yogurt with honey',\n      Lunch: 'Turkey and avocado wrap',\n      Dinner: 'Stir-fried tofu with broccoli'\n    },\n    // Add entries for Wednesday through Sunday\n    Wednesday: {\n      Breakfast: 'Smoothie with spinach and berries',\n      Lunch: 'Quinoa and chickpea salad',\n      Dinner: 'Grilled shrimp with mixed veggies'\n    },\n    Thursday: {\n      Breakfast: 'Whole grain toast with avocado',\n      Lunch: 'Lentil soup with a side salad',\n      Dinner: 'Baked chicken breast with steamed carrots'\n    },\n    Friday: {\n      Breakfast: 'Scrambled eggs with spinach',\n      Lunch: 'Chicken Caesar salad',\n      Dinner: 'Stir-fried beef with bell peppers'\n    },\n    Saturday: {\n      Breakfast: 'Fruit and nut granola',\n      Lunch: 'Vegetable soup with whole grain bread',\n      Dinner: 'Baked cod with asparagus'\n    },\n    Sunday: {\n      Breakfast: 'Chia pudding with berries',\n      Lunch: 'Roasted vegetable and hummus wrap',\n      Dinner: 'Turkey meatballs with zucchini noodles'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dietary Recommendations for Insufficient Weight\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Diet Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(weeklyDiet).map(day => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: \"3\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: weeklyDiet[day].Breakfast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: weeklyDiet[day].Lunch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Dinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: weeklyDiet[day].Dinner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = DietInsufficient;\nexport default DietInsufficient;\nvar _c;\n$RefreshReg$(_c, \"DietInsufficient\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DietInsufficient","weeklyDiet","Monday","Breakfast","Lunch","Dinner","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","children","fileName","_jsxFileName","lineNumber","columnNumber","border","Object","keys","map","day","Fragment","rowSpan","_c","$RefreshReg$"],"sources":["C:/Users/Kamran/Desktop/Project 8 - Copy/project kamran/my-app/Frontend/src/DietInsufficient.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DietInsufficient = () => {\r\n  // Example dietary recommendations for 7 days\r\n  const weeklyDiet = {\r\n    Monday: {\r\n      Breakfast: 'Oatmeal with fruits',\r\n      Lunch: 'Grilled chicken salad',\r\n      Dinner: 'Baked salmon with vegetables',\r\n    },\r\n    Tuesday: {\r\n      Breakfast: 'Greek yogurt with honey',\r\n      Lunch: 'Turkey and avocado wrap',\r\n      Dinner: 'Stir-fried tofu with broccoli',\r\n    },\r\n    // Add entries for Wednesday through Sunday\r\n    Wednesday: {\r\n      Breakfast: 'Smoothie with spinach and berries',\r\n      Lunch: 'Quinoa and chickpea salad',\r\n      Dinner: 'Grilled shrimp with mixed veggies',\r\n    },\r\n    Thursday: {\r\n      Breakfast: 'Whole grain toast with avocado',\r\n      Lunch: 'Lentil soup with a side salad',\r\n      Dinner: 'Baked chicken breast with steamed carrots',\r\n    },\r\n    Friday: {\r\n      Breakfast: 'Scrambled eggs with spinach',\r\n      Lunch: 'Chicken Caesar salad',\r\n      Dinner: 'Stir-fried beef with bell peppers',\r\n    },\r\n    Saturday: {\r\n      Breakfast: 'Fruit and nut granola',\r\n      Lunch: 'Vegetable soup with whole grain bread',\r\n      Dinner: 'Baked cod with asparagus',\r\n    },\r\n    Sunday: {\r\n      Breakfast: 'Chia pudding with berries',\r\n      Lunch: 'Roasted vegetable and hummus wrap',\r\n      Dinner: 'Turkey meatballs with zucchini noodles',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dietary Recommendations for Insufficient Weight</h1>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>Day</th>\r\n            <th>Meal</th>\r\n            <th>Diet Information</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(weeklyDiet).map(day => (\r\n            <React.Fragment key={day}>\r\n              <tr>\r\n                <td rowSpan=\"3\">{day}</td>\r\n                <td>Breakfast</td>\r\n                <td>{weeklyDiet[day].Breakfast}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Lunch</td>\r\n                <td>{weeklyDiet[day].Lunch}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Dinner</td>\r\n                <td>{weeklyDiet[day].Dinner}</td>\r\n              </tr>\r\n            </React.Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietInsufficient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}